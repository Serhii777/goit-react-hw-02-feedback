{"version":3,"sources":["components/Container/Container.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/App.js","index.js"],"names":["Container","children","className","Section","title","defaultProps","FeedbackOptions","onLeaveFeedback","type","name","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleCounter","e","target","setState","prevState","props","step","countTotalFeedback","totalValues","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","totalFeedback","feedbackPercentage","Math","round","this","posPercent","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yXAKeA,G,MAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,yBAAKC,UAAU,aAAaD,KCC1DE,G,MAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOH,EAAe,EAAfA,SACxB,OACE,yBAAKC,UAAU,WACb,wBAAIA,UAAU,iBAAiBE,GAC9BH,KAWPE,EAAQE,aAAe,CACrBD,MAAO,IAGMD,QCOAG,G,MA3BS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,yBAAKL,UAAU,kBACb,4BACEM,KAAK,SACLC,KAAK,OACLC,QAASH,EACTL,UAAU,mBAJZ,QAOA,4BACEM,KAAK,SACLC,KAAK,UACLC,QAASH,EACTL,UAAU,mBAJZ,WAOA,4BACEM,KAAK,SACLC,KAAK,MACLC,QAASH,EACTL,UAAU,mBAJZ,UChBAS,G,MAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,yBAAKV,UAAU,gBAAgBU,KAQnED,EAAaN,aAAe,CAC1BO,QAAS,IAGED,QCZTE,G,MAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,yBAAKhB,UAAU,cACb,wBAAIA,UAAU,mBACZ,wBAAIA,UAAU,mBAAd,SAAuCY,GACvC,wBAAIZ,UAAU,mBAAd,YAA0Ca,GAC1C,wBAAIb,UAAU,mBAAd,QAAsCc,IAGxC,0BAAMd,UAAU,mBAAhB,UAA0Ce,GAC1C,0BAAMf,UAAU,mBAAhB,sBACsBgB,EADtB,QAiBNL,EAAWR,aAAe,CACxBS,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAGPL,QC/BTM,E,4MAeJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,cAAgB,SAACC,GAAO,IACdb,EAASa,EAAEC,OAAXd,KAER,EAAKe,UAAS,SAACC,EAAWC,GACxB,OAAO,eACJjB,EAAOgB,EAAUhB,GAAQiB,EAAMC,U,EAKtCC,mBAAqB,SAACR,GACpB,IAAMS,EAAc,EAAKT,MACzB,OAAOU,OAAOC,OAAOF,GAAaG,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAGxEC,gCAAkC,SAACC,EAAetB,GAChD,IAAIuB,EAAsBvB,EAAQsB,EAAkB,IACpD,OAAOE,KAAKC,MAAMF,I,uDAGV,IAAD,EACwBG,KAAKpB,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBoB,EAAgBI,KAAKZ,qBACrBa,EAAaD,KAAKL,gCACtBC,EACAtB,GAGF,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASV,MAAM,yBACb,kBAAC,EAAD,CAAiBG,gBAAiBiC,KAAKnB,iBAEzC,kBAAC,EAAD,CAASjB,MAAM,cACZgC,EAAgB,GAAK,kBAAC,EAAD,CAAcxB,QAAQ,sBAC3CwB,EAAgB,GACf,kBAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,EACPlB,mBAAoBuB,U,GA/DhBC,aAAZvB,EAOGd,aAAe,CACpBS,KAAM,EACNC,QAAS,EACTC,IAAK,EACLW,KAAM,EACNT,mBAAoB,GA4DTC,QC3EfwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.172c5e82.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Container.css\";\r\n\r\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Section.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <h1 className=\"section-title\">{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  props: PropTypes.exact({\r\n    title: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport \"./FeedbackOptions.css\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\r\n  return (\r\n    <div className=\"feedback-block\">\r\n      <button\r\n        type=\"button\"\r\n        name=\"good\"\r\n        onClick={onLeaveFeedback}\r\n        className=\"feedback-button\">\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"neutral\"\r\n        onClick={onLeaveFeedback}\r\n        className=\"feedback-button\">\r\n        Neutral\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"bad\"\r\n        onClick={onLeaveFeedback}\r\n        className=\"feedback-button\">\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './Notification.css'\r\n\r\nconst Notification = ({ message }) => <div className=\"notification\">{message}</div>;\r\n\r\nNotification.propTypes = {\r\n    props: PropTypes.exact({\r\n      message: PropTypes.string,\r\n    }),\r\n  };\r\n\r\n  Notification.defaultProps = {\r\n    message: '',\r\n  };\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Statistics.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className=\"statistics\">\r\n      <ul className=\"statistics-list\">\r\n        <li className=\"statistics-item\">Good: {good}</li>\r\n        <li className=\"statistics-item\">Neutral: {neutral}</li>\r\n        <li className=\"statistics-item\">Bad: {bad}</li>\r\n      </ul>\r\n\r\n      <span className=\"statistics-text\">Total: {total}</span>\r\n      <span className=\"statistics-text\">\r\n        Positive feedback: {positivePercentage}%\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  props: PropTypes.exact({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Container from \"./Container\";\nimport Section from \"./Section\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Notification from \"./Notification\";\nimport Statistics from \"./Statistics\";\n\nclass App extends Component {\n  static propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    step: 1,\n    positivePercentage: 0,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleCounter = (e) => {\n    const { name } = e.target;\n\n    this.setState((prevState, props) => {\n      return {\n        [name]: prevState[name] + props.step,\n      };\n    });\n  };\n\n  countTotalFeedback = (state) => {\n    const totalValues = this.state;\n    return Object.values(totalValues).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = (totalFeedback, good) => {\n    let feedbackPercentage = (good / (totalFeedback)) * 100;\n    return Math.round(feedbackPercentage);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const totalFeedback = this.countTotalFeedback();\n    const posPercent = this.countPositiveFeedbackPercentage(\n      totalFeedback,\n      good\n    );\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.handleCounter} />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalFeedback < 1 && <Notification message=\"No feedback given\" />}\n          {totalFeedback > 0 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={posPercent}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}